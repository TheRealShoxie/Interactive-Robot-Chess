<?xml version="1.0"?>

<!--
 * external_camera.xacro
 * <p>
 * This xacro file defines the external_camera used in the System. 
 * Sensor values are based of a IntelRealSence D435 depth camera. Link: https://www.intelrealsense.com/depth-camera-d435/
 * 
 * 
 * 
 * @author Omar Ibrahim
 * @version 0.1 ( Initial development ).
 * @version 1.0 ( Initial release ).
 * 
 * @see robotGazebo.launch
 * @see ros kortex_description package
-->

<robot name="external_camera" xmlns:xacro="http://ros.org/wiki/xacro">

    <gazebo>
        <static>true</static>
    </gazebo>

    <!-- Base link to the world and creating a box model for the camera-->

    <link name="world" />
    <joint name="ec_world_to_root" type="fixed">
        <child link="ec_base_link" />
        <parent link="world" />
        <origin xyz="0 0.35 1" rpy="0 0 0" />
    </joint> 


    <link name="ec_base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.025" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.025" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="1" />
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5" />
        </inertial>
    </link>

    <!-- Creating the camera link needed and the frames where the depth and color sensor will sit-->


    <joint name="ec_camera_module" type="fixed">
        <origin xyz="0 0 -0.0125" rpy="0 ${pi/2} 0" />
        <parent link="ec_base_link" />
        <child  link="ec_camera_link" />
    </joint>

    <link name="ec_camera_link"/>

    
    <joint name="ec_color_module" type="fixed">
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
        <parent link="ec_camera_link" />
        <child  link="ec_color_frame" />
    </joint>
    <link name="ec_color_frame" />

    <joint name="ec_depth_module" type="fixed">
        <origin xyz="0 0.0125 0" rpy="${-pi/2} 0 ${-pi/2}" />
        <parent link="ec_camera_link" />
        <child  link="ec_depth_frame" />
    </joint>
    <link name="ec_depth_frame"/>


    <!-- Cameras-->

    <xacro:property name="deg_to_rad" value="0.01745329251994329577" />

    <!-- RGB Camera-->

    
    <gazebo reference="ec_camera_link">
      <material>Gazebo/Red</material>
      <sensor name="ec_rgbCamera" type="camera">
        <pose> 0 0 0 0 0 0 </pose>
        <visualize>false</visualize>
        <update_rate>30</update_rate>
        <always_on>1</always_on>
        <camera>
          <horizontal_fov>${69.4*deg_to_rad}</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>RGB_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <frameName>ec_color_frame</frameName>
          <cameraName>ec_color</cameraName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        </plugin>
      </sensor>
    </gazebo>

    <!-- Depth Camera-->


    <gazebo reference="ec_camera_link">
      <material>Gazebo/Red</material>
      <sensor name="ec_depthCamera" type="depth">
        <pose> 0 0 0 0 0 0 </pose>
        <visualize>false</visualize>
        <update_rate>90</update_rate>
        <camera>
          <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.100</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <frameName>ec_depth_frame</frameName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <cameraName>ec_depth</cameraName>
        </plugin>
      </sensor>
    </gazebo>
    
    

</robot>