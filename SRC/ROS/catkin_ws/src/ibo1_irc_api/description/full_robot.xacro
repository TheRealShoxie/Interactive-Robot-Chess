<?xml version="1.0"?>

<!--
 * full_robot.xacro
 * <p>
 * This xacro file defines the full robot with an included sensors into the kortex gazebo model which does not exist in its original
 * 
 * <p>
 * 3rd party code used here. The launch file is an adaption from the original ros kortex ros library for ros-noetic.
 * Link to the github repository: https://github.com/Kinovarobotics/ros_kortex. Accesses 30th of April 2023
 * It uses the ros kortex package. This file is an adaption from the original kortex_robot.xacro.
 * The original can be found under: kortex_description/robots/kortex_robot.xacro
 * License: License: https://github.com/Kinovarobotics/ros_kortex/blob/noetic-devel/LICENSE
 * 
 * <p>
 * Sensor values for the inbuilt camera are based of the real world kortex model with uses a intel RealSense D435 adaption.
 * Link to the intel RealSense D435 camera: https://www.intelrealsense.com/depth-camera-d435/
 * 
 * @author Omar Ibrahim
 * @version 0.1 ( Initial development ).
 * @version 1.0 ( Initial release ).
 * 
 * @see robotGazebo.launch
 * @see ros kortex_description package
-->

<robot name="gen3_robotiq_2f_140" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="arm" default="gen3" />
    <xacro:arg name="dof" default="7" />
    <xacro:arg name="vision" default="true" />

    <xacro:arg name="gripper" default="robotiq_2f_140" />

    <xacro:arg name="sim" default="false" />
    <xacro:arg name="prefix" default="" />


    <xacro:include filename="$(find kortex_description)/robots/kortex_robot.xacro" />
    <xacro:load_robot arm="$(arg arm)" gripper="$(arg gripper)" dof="$(arg dof)" vision="$(arg vision)" sim="$(arg sim)" prefix="$(arg prefix)"/>

    <!-- Cameras -->

    <xacro:property name="deg_to_rad" value="0.01745329251994329577" />

    <!-- RGB Camera-->

    <joint name="camera_color_joint" type="fixed">
      <parent link="camera_color_frame" />
      <child link="camera_color_link" />
      <origin xyz="0 0 0" rpy="${pi/2} ${-pi/2} 0" />
    </joint>

    <link name="camera_color_link"></link>

    <joint name="camera_color_optical_joint" type="fixed">
      <parent link="camera_color_link" />
      <child link="camera_color_link_optical" />
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
    </joint>

    <link name="camera_color_link_optical"></link>
    
    <gazebo reference="camera_color_link">
      <material>Gazebo/Red</material>
      <sensor name="rgbCamera" type="camera">
        <pose> 0 0 0 0 0 0 </pose>
        <visualize>false</visualize>
        <update_rate>30</update_rate>
        <always_on>1</always_on>
        <camera>
          <horizontal_fov>${69.4*deg_to_rad}</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>RGB_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <frame_name>camera_color_link_optical</frame_name>
          <cameraName>color</cameraName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        </plugin>
      </sensor>
    </gazebo>

    <!-- Depth Camera-->

    <joint name="camera_depth_joint" type="fixed">
      <parent link="camera_depth_frame" />
      <child link="camera_depth_link" />
      <origin xyz="0 0 0" rpy="${pi/2} ${-pi/2} 0" />
    </joint>

    <link name="camera_depth_link"></link>

    <joint name="camera_depth_optical_joint" type="fixed">
      <parent link="camera_depth_link" />
      <child link="camera_depth_link_optical" />
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
    </joint>

    <link name="camera_depth_link_optical"></link>

    <gazebo reference="camera_depth_link">
      <material>Gazebo/Red</material>
      <sensor name="depthCamera" type="depth">
        <pose> 0 0 0 0 0 0 </pose>
        <visualize>false</visualize>
        <update_rate>90</update_rate>
        <camera>
          <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.100</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <frameName>camera_depth_link_optical</frameName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <cameraName>depth</cameraName>
        </plugin>
      </sensor>
    </gazebo>


</robot>